{"ast":null,"code":"var _jsxFileName = \"D:\\\\Games\\\\VK_MINI_APP\\\\mini_status_app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\nconst ROUTES = {\n  HOME: 'home',\n  INTRO: 'intro'\n};\nconst STOREGE_KEYS = {\n  STATUS: 'status'\n};\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState( /*#__PURE__*/React.createElement(ScreenSpinner, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }\n  }));\n  const [userHasSeenIntro, setuserHasSeenIntro] = useState(false);\n  useEffect(() => {\n    bridge.subscribe(({\n      detail: {\n        type,\n        data\n      }\n    }) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      const storageData = await bridge.send('VKWebAppStorageGet', {\n        keys: Object.values(STOREGE_KEYS)\n      });\n      console.log(storageData);\n      setUser(user);\n      setPopout(null);\n    }\n\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    activePanel: activePanel,\n    popout: popout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    id: ROUTES.HOME,\n    fetchedUser: fetchedUser,\n    go: go,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Intro, {\n    id: ROUTES.INTRO,\n    go: go,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Games/VK_MINI_APP/mini_status_app/src/App.js"],"names":["React","useState","useEffect","bridge","View","ScreenSpinner","Home","Intro","ROUTES","HOME","INTRO","STOREGE_KEYS","STATUS","App","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","userHasSeenIntro","setuserHasSeenIntro","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","user","send","storageData","keys","Object","values","console","log","go","e","currentTarget","dataset","to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\n\nconst ROUTES = {\n\tHOME: 'home',\n\tINTRO: 'intro'\n};\n\nconst STOREGE_KEYS = {\n\tSTATUS: 'status',\n}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userHasSeenIntro, setuserHasSeenIntro] = useState(false);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst storageData = await bridge.send('VKWebAppStorageGet', {\n\t\t\t\tkeys:Object.values(STOREGE_KEYS)\n\t\t\t});\n\t\t\tconsole.log(storageData);\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id={ROUTES.HOME} fetchedUser={fetchedUser} go={go} />\n\t\t\t<Intro id={ROUTES.INTRO} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}